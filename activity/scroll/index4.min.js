let provider,signer,contractA,firstOpenWindow=!0,CHAIN_ID=534352,CHAIN_NAME="Scroll",PROVIDER_HTTP_URL="https://rpc.scroll.io",CHAIN_EXPLORER="https://scrollscan.com",ERC1155_C2WORLD_CONTRACT_ADDRESS="0xe0B5D1A12530FE51139da848a6c909f295352555",MINT_VALUE="0.00055",Erc1155Abi=[{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"burnBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"uri",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"needed",type:"uint256"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ERC1155InsufficientBalance",type:"error"},{inputs:[{internalType:"address",name:"approver",type:"address"}],name:"ERC1155InvalidApprover",type:"error"},{inputs:[{internalType:"uint256",name:"idsLength",type:"uint256"},{internalType:"uint256",name:"valuesLength",type:"uint256"}],name:"ERC1155InvalidArrayLength",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"ERC1155InvalidOperator",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"ERC1155InvalidReceiver",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"}],name:"ERC1155InvalidSender",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"ERC1155MissingApprovalForAll",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"InvalidAddressForAuth",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"mintBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"Raffle__NotEnoughEther",type:"error"},{inputs:[],name:"Raffle__NotMintable",type:"error"},{inputs:[],name:"Raffle__TransfetErr",type:"error"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOperator",type:"address"}],name:"setOperator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"}],name:"setTokenPrice",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"bool",name:"status",type:"bool"}],name:"setUntransferAble",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"UnApproved",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"UnauthorizedAccount",type:"error"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"UntransferAbleError",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"receiver_",type:"address"}],name:"setReceiver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"newuri",type:"string"}],name:"setURI",outputs:[],stateMutability:"nonpayable",type:"function"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"TransferSingle",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"value",type:"string"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"URI",type:"event"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"userMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"getTokenPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"opera",type:"address"}],name:"isApproveOrAuth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"operator",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"receiver",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"untransferAble",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"uri",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}],CONTRACT_MEMORY_DATA="0x00000000000000000000000000000000",init=async()=>{isMetaMaskInstalled()?(provider=new ethers.providers.Web3Provider(window.ethereum),showModal("Connecting wallet",!0),await checkAndSwitchNetwork(CHAIN_ID),await provider.send("eth_requestAccounts",[]),signer=provider.getSigner(),showModal("Connecting wallet",!1),await initContract(),await signer.getAddress(),await refreshTasks()):(window.location.href="https://metamask.io/download.html",alert("MetaMask is not installed. Please install MetaMask: https://metamask.io/download.html"))},showModal=(e,t)=>{document.getElementById("loadingWalletConnect").style.display=t?"block":"none",document.querySelectorAll(".modal-loading-txt")[0].innerText=e},isMetaMaskInstalled=()=>void 0!==window.ethereum&&window.ethereum.isMetaMask,requestEthChainId=async()=>provider?(await provider.getNetwork()).chainId:null,addChainId=async(e,t,n,a,i)=>{if(provider)try{var s=ethers.utils.hexStripZeros(ethers.utils.hexlify(e));await provider.send("wallet_addEthereumChain",[{chainId:s,chainName:t,rpcUrls:[n],nativeCurrency:a,blockExplorerUrls:[i]}])}catch(e){showError("Failed to add chain.")}},switchChainId=async e=>{if(provider)try{var t=ethers.utils.hexStripZeros(ethers.utils.hexlify(e));await provider.send("wallet_switchEthereumChain",[{chainId:t}]),provider=new ethers.providers.Web3Provider(window.ethereum),signer=provider.getSigner()}catch(e){showError("Failed to switch chain.")}},checkAndSwitchNetwork=async e=>{await requestEthChainId()!==e&&(await addChainId(CHAIN_ID,CHAIN_NAME,PROVIDER_HTTP_URL,{name:"Ether",symbol:"ETH",decimals:18},CHAIN_EXPLORER),await switchChainId(e))},initContract=async()=>{contractA=new ethers.Contract(ERC1155_C2WORLD_CONTRACT_ADDRESS,Erc1155Abi,signer),await refreshTasks()},showError=e=>{document.getElementById("walletNotification").style.display="block";var t=document.getElementsByClassName("c2-notification-notice-description");0<t.length&&(t[0].textContent=e,setTimeout(()=>{document.getElementById("walletNotification").style.display="none"},6e3))},showInfo=(e,t)=>{document.getElementsByClassName("c2-message-notice")[0].style.display="block";var n=document.querySelectorAll(".c2-message-custom-content span");1<n.length&&(n[1].textContent=e,t)&&setTimeout(()=>{document.getElementsByClassName("c2-message-notice")[0].style.display="none"},6e3)},balanceOf=async(e,t)=>contractA?await contractA.balanceOf(e,t):0,mintTokens=async(e,t)=>{contractA&&(await checkAndSwitchNetwork(CHAIN_ID),await provider.send("eth_requestAccounts",[]),signer=provider.getSigner(),await initContract(),showModal("Minting NFT",!0),showInfo("Start minting your NFT.Please continue to interact in MetaMask.",!1),await(await contractA.userMint(e,t,CONTRACT_MEMORY_DATA,{value:ethers.utils.parseEther(MINT_VALUE)})).wait(),showInfo("Congratulations on successfully minting your NFT",!0),showModal("Minting NFT",!1),await refreshTasks(),showInfo('You have successfully minted the "First Journey." commemorative NFT. Please go to Scroll to get the badge.',!1),document.getElementById("root").style.display="none",location.reload(!0))},refreshTasks=async()=>{var e;provider&&(e=await signer.getAddress())&&(await balanceOf(e,6)).gt(0)&&(showInfo('You have successfully minted the "First Journey." commemorative NFT. Please go to Scroll to get the badge.',!1),document.getElementById("root").style.display="none","undefined"==typeof wxWindowResize)&&showModal("Loading a voxel-style world scene...",!0)},initDom=()=>{let e=document.getElementById("itemdetailbuy");e&&(e.onclick=async()=>{try{await mintTokens(parseInt(e.getAttribute("tokenID")),1),showInfo("Minting process completed successfully.",!0)}catch(e){document.getElementsByClassName("c2-message-notice")[0].style.display="none",showModal("Minting NFT",!1),e.data?showError(e.data.message):showError(e.message)}})};document.addEventListener("DOMContentLoaded",()=>{var e=document.getElementsByClassName("c2-notification-notice-close");0<e.length&&(e[0].onclick=()=>{var e=document.getElementById("walletNotification");e&&(e.style.display="none")}),void 0!==window.ethereum?(window.ethereum.on("accountsChanged",async e=>{showInfo("Accounts changed.",!0),document.getElementById("root").style.display="block",await refreshTasks()}),window.ethereum.on("chainChanged",e=>{provider=new ethers.providers.Web3Provider(window.ethereum),signer=provider.getSigner()}),window.ethereum.on("connect",e=>{console.log("Connected to network:",e),init()}),window.ethereum.on("disconnect",e=>{console.error("Disconnected from network:",e)}),window.ethereum.on("message",e=>{console.log("New message:",e)})):console.log("MetaMask is not installed"),lottie.loadAnimation({container:document.getElementById("loadingIcon"),renderer:"svg",loop:!0,autoplay:!0,path:"loadingV2.json"}),initDom(),document.body.addEventListener("touchmove",function(e){e.preventDefault()},{passive:!1}),init()});