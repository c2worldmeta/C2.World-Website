let provider,signer,contractA,firstOpenWindow=!0,CHAIN_ID=534351,CHAIN_NAME="Scroll Sepolia",PROVIDER_HTTP_URL="https://sepolia-rpc.scroll.io",CHAIN_EXPLORER="https://sepolia.scrollscan.com",ERC1155_C2WORLD_CONTRACT_ADDRESS="0xabCc6e05c84ee1F751402230F52591d443EbD5A1",MINT_VALUE="0.0006",NFT_DETAILS=[{desc:'C².WORLD\'s educational metaverse product offers an exclusive NFT named "First Suit" for its first batch of users. Upon the product\'s launch, users can redeem this NFT for a special outfit to showcase their unique status in the virtual world. The "First Suit" NFT is non-transferable and cannot be traded, ensuring its uniqueness and exclusivity. By holding the "First Suit," users become special members of the C².WORLD community.',name:"First Suit",icon:"./FirstSuitMedia/FirstSuit.jpg",tokenId:"3",inventory:"∞",sellerName:"C².WORLD",creatorName:"C².WORLD",unitPrice:6e-4},{desc:'C².WORLD introduces the "Craft BlindBox 000" NFT. Upon the project\'s launch, this blind box will open, randomly generating a variety of valuable NFTs that enhance productivity and earnings, including but not limited to seeds, water pumps, solar panels, and platform tokens. In the virtual world of C².WORLD, every user can engage in productive activities, especially those who own land, which allows them to cultivate and earn profits. Each blind box provides users with the opportunity to explore more resources and increase their income.',name:"Craft BlindBox 000",icon:"./FirstSuitMedia/CraftBlindBox000.jpg",tokenId:"4",inventory:"∞",sellerName:"C².WORLD",creatorName:"C².WORLD",unitPrice:6e-4}],Erc1155Abi=[{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"burnBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"uri",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"needed",type:"uint256"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ERC1155InsufficientBalance",type:"error"},{inputs:[{internalType:"address",name:"approver",type:"address"}],name:"ERC1155InvalidApprover",type:"error"},{inputs:[{internalType:"uint256",name:"idsLength",type:"uint256"},{internalType:"uint256",name:"valuesLength",type:"uint256"}],name:"ERC1155InvalidArrayLength",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"ERC1155InvalidOperator",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"ERC1155InvalidReceiver",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"}],name:"ERC1155InvalidSender",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"ERC1155MissingApprovalForAll",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"InvalidAddressForAuth",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"mintBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"Raffle__NotEnoughEther",type:"error"},{inputs:[],name:"Raffle__NotMintable",type:"error"},{inputs:[],name:"Raffle__TransfetErr",type:"error"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOperator",type:"address"}],name:"setOperator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"}],name:"setTokenPrice",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"bool",name:"status",type:"bool"}],name:"setUntransferAble",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"UnApproved",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"UnauthorizedAccount",type:"error"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"UntransferAbleError",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"receiver_",type:"address"}],name:"setReceiver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"newuri",type:"string"}],name:"setURI",outputs:[],stateMutability:"nonpayable",type:"function"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"TransferSingle",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"value",type:"string"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"URI",type:"event"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"userMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"getTokenPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"opera",type:"address"}],name:"isApproveOrAuth",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"operator",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"receiver",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"untransferAble",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"uri",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}],CONTRACT_MEMORY_DATA="0x00000000000000000000000000000000",init=async()=>{var e;isMetaMaskInstalled()?(provider=new ethers.providers.Web3Provider(window.ethereum),showModal("Connecting wallet",!0),await checkAndSwitchNetwork(CHAIN_ID),await provider.send("eth_requestAccounts",[]),signer=provider.getSigner(),showModal("Connecting wallet",!1),await initContract(),e=await signer.getAddress(),document.getElementById("myaddress").innerText=e,await refreshTasks()):(window.location.href="https://metamask.io/download.html",alert("MetaMask is not installed. Please install MetaMask: https://metamask.io/download.html"))},showModal=(e,t)=>{document.getElementById("loadingWalletConnect").style.display=t?"block":"none",document.querySelectorAll(".modal-loading-txt")[0].innerText=e},isMetaMaskInstalled=()=>void 0!==window.ethereum&&window.ethereum.isMetaMask,requestEthChainId=async()=>provider?(await provider.getNetwork()).chainId:null,addChainId=async(e,t,n,a,i)=>{if(provider)try{var r=ethers.utils.hexStripZeros(ethers.utils.hexlify(e));await provider.send("wallet_addEthereumChain",[{chainId:r,chainName:t,rpcUrls:[n],nativeCurrency:a,blockExplorerUrls:[i]}])}catch(e){showError("Failed to add chain.")}},switchChainId=async e=>{if(provider)try{var t=ethers.utils.hexStripZeros(ethers.utils.hexlify(e));await provider.send("wallet_switchEthereumChain",[{chainId:t}]),provider=new ethers.providers.Web3Provider(window.ethereum),signer=provider.getSigner()}catch(e){showError("Failed to switch chain.")}},checkAndSwitchNetwork=async e=>{await requestEthChainId()!==e&&(await addChainId(CHAIN_ID,CHAIN_NAME,PROVIDER_HTTP_URL,{name:"Ether",symbol:"ETH",decimals:18},CHAIN_EXPLORER),await switchChainId(e))},initContract=async()=>{contractA=new ethers.Contract(ERC1155_C2WORLD_CONTRACT_ADDRESS,Erc1155Abi,signer),await refreshTasks()},showError=e=>{document.getElementById("walletNotification").style.display="block";var t=document.getElementsByClassName("c2-notification-notice-description");0<t.length&&(t[0].textContent=e,setTimeout(()=>{document.getElementById("walletNotification").style.display="none"},6e3))},showInfo=(e,t)=>{document.getElementsByClassName("c2-message-notice")[0].style.display="block";var n=document.querySelectorAll(".c2-message-custom-content span");1<n.length&&(n[1].textContent=e,t)&&setTimeout(()=>{document.getElementsByClassName("c2-message-notice")[0].style.display="none"},6e3)},balanceOf=async(e,t)=>contractA?await contractA.balanceOf(e,t):0,mintTokens=async(e,t)=>{if(contractA){if(await checkAndSwitchNetwork(CHAIN_ID),await provider.send("eth_requestAccounts",[]),signer=provider.getSigner(),await initContract(),4===e){var n=await signer.getAddress();if(!(await balanceOf(n,3)).gt(0))return showError("You need to mint the “First Suit NFT first"),!1}showModal("Minting NFT",!0),showInfo("Start minting your NFT.Please continue to interact in MetaMask.",!1);await(await contractA.userMint(e,t,CONTRACT_MEMORY_DATA,{value:ethers.utils.parseEther(MINT_VALUE)})).wait();showInfo("Congratulations on successfully minting your NFT",!0),showModal("Minting NFT",!1),await refreshTasks()}},addGrayOverlay=async e=>{var t=e.querySelector(".overlay"),t=(t&&e.removeChild(t),document.createElement("div"));t.className="overlay",t.innerText="Task Finished",e.appendChild(t)},refreshDetail=async e=>{document.getElementById("itemdetailicon").style.background="url('"+e.icon+"') center center / contain no-repeat",document.getElementById("itemdetaildesc").childNodes[2].nodeValue=e.desc,document.getElementById("itemdetailtokenID").innerText=e.tokenId,document.getElementById("itemdetailbuy").setAttribute("tokenID",e.tokenId),document.getElementById("itemdetailname").innerText=e.name,document.getElementById("itemdetailcreator").innerText=e.creatorName,document.getElementById("itemdetailinventory").innerText="Available from this seller： "+e.inventory,document.getElementById("itemdetailprice").innerText=e.unitPrice+" ETH",document.getElementById("itemdetailseller").innerText="@"+e.sellerName},refreshTasks=async()=>{var e,t;provider&&(t=await signer.getAddress())&&(e=(await balanceOf(t,3)).gt(0),t=(await balanceOf(t,4)).gt(0),e?t?(document.querySelectorAll(".assetView--Q8Z80")[0].style.display="none",document.getElementById("twittertask").style.display="block",document.querySelectorAll(".backButton--E4gHy span")[0].textContent="Step 3"):(document.querySelectorAll(".backButton--E4gHy span")[0].textContent="Step 2",refreshDetail(NFT_DETAILS[1])):(document.querySelectorAll(".backButton--E4gHy span")[0].textContent="Step 1",refreshDetail(NFT_DETAILS[0])))},initDom=()=>{let e=document.getElementById("itemdetailbuy");e&&(e.onclick=async()=>{try{await mintTokens(parseInt(e.getAttribute("tokenID")),1),showInfo("Minting process completed successfully.",!0)}catch(e){document.getElementsByClassName("c2-message-notice")[0].style.display="none",showModal("Minting NFT",!1),e.data?showError(e.data.message):showError(e.message)}}),document.querySelectorAll("div.assetCardBody--g7gdM").forEach(function(e){e.addEventListener("click",function(){showError("Waiting for the project to be officially launched.")})})};document.addEventListener("DOMContentLoaded",()=>{var e=document.getElementsByClassName("c2-notification-notice-close");0<e.length&&(e[0].onclick=()=>{var e=document.getElementById("walletNotification");e&&(e.style.display="none")}),void 0!==window.ethereum?(window.ethereum.on("accountsChanged",async e=>{showInfo("Accounts changed.",!0);try{var t=await signer.getAddress();document.getElementById("myaddress").innerText=t,await refreshTasks()}catch(e){showError("Error fetching address.")}}),window.ethereum.on("chainChanged",e=>{provider=new ethers.providers.Web3Provider(window.ethereum),signer=provider.getSigner()}),window.ethereum.on("connect",e=>{console.log("Connected to network:",e)}),window.ethereum.on("disconnect",e=>{console.error("Disconnected from network:",e)}),window.ethereum.on("message",e=>{console.log("New message:",e)})):console.log("MetaMask is not installed"),lottie.loadAnimation({container:document.getElementById("loadingIcon"),renderer:"svg",loop:!0,autoplay:!0,path:"loadingV2.json"}),initDom(),init()});